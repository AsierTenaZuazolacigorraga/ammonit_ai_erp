// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type ItemCreate = {
  title: string
  description?: string | null
}

export type ItemPublic = {
  title: string
  description?: string | null
  id: string
  owner_id: string
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type ItemUpdate = {
  title?: string | null
  description?: string | null
}

export type MachineCreate = {
  name?: string | null
  provider?: string | null
  plc?: string | null
  oee: number
  oee_availability: number
  oee_performance: number
  oee_quality: number
}

export type MachinePublic = {
  name?: string | null
  provider?: string | null
  plc?: string | null
  oee: number
  oee_availability: number
  oee_performance: number
  oee_quality: number
  id: string
  owner_id: string
}

export type MachinesPublic = {
  data: Array<MachinePublic>
  count: number
}

export type MachineUpdate = {
  name?: string | null
  provider?: string | null
  plc?: string | null
  oee: number
  oee_availability: number
  oee_performance: number
  oee_quality: number
  title?: string | null
}

export type MeasurementCreate = {
  timestamp?: string
  temperature: number
  power_usage: number
}

export type MeasurementPublic = {
  timestamp?: string
  temperature: number
  power_usage: number
  id: string
  owner_id: string
}

export type MeasurementsPublic = {
  data: Array<MeasurementPublic>
  count: number
}

export type Message = {
  message: string
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type ItemsReadItemData = {
  id: string
}

export type ItemsReadItemResponse = ItemPublic

export type ItemsUpdateItemData = {
  id: string
  requestBody: ItemUpdate
}

export type ItemsUpdateItemResponse = ItemPublic

export type ItemsDeleteItemData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type MachinesReadMachinesData = {
  limit?: number
  skip?: number
}

export type MachinesReadMachinesResponse = MachinesPublic

export type MachinesCreateMachineData = {
  requestBody: MachineCreate
}

export type MachinesCreateMachineResponse = MachinePublic

export type MachinesReadMachineData = {
  machineId: string
}

export type MachinesReadMachineResponse = MachinePublic

export type MachinesUpdateMachineData = {
  machineId: string
  requestBody: MachineUpdate
}

export type MachinesUpdateMachineResponse = MachinePublic

export type MeasurementsReadLatestMeasurementsData = {
  machineId: string
}

export type MeasurementsReadLatestMeasurementsResponse = MeasurementsPublic

export type MeasurementsCreateMeasurementData = {
  machineId: string
  requestBody: MeasurementCreate
}

export type MeasurementsCreateMeasurementResponse = MeasurementPublic

export type MeasurementsReadMeasurementData = {
  machineId: string
  measurementId: string
}

export type MeasurementsReadMeasurementResponse = MeasurementPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UtilsHealthCheckResponse = boolean
