// This file is auto-generated by @hey-api/openapi-ts

export type Body_emails_create_outlook_token_step_2 = {
    data: OutlookTokenStep2;
    email_in: EmailCreate;
};

export type Body_login_login_access_token = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

export type Body_orders_create_order = {
    base_document: (Blob | File);
};

export type ClientCreate = {
    name: string;
    created_at?: string;
};

export type ClientPublic = {
    name: string;
    created_at?: string;
    id: string;
    owner_id: string;
};

export type EmailCreate = {
    email: string;
    created_at?: string;
};

export type EmailPublic = {
    email: string;
    created_at?: string;
    id: string;
    owner_id: string;
    is_connected?: boolean;
};

export type EmailsPublic = {
    data: Array<EmailPublic>;
    count: number;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type Message = {
    message: string;
};

export type OrderPublic = {
    base_document?: (string | null);
    base_document_name?: (string | null);
    content_processed?: (string | null);
    state?: OrderState;
    approved_at?: (string | null);
    erp_interaction_at?: (string | null);
    created_at?: string;
    id: string;
    owner_id: string;
    client_name?: (string | null);
};

export type OrdersPublic = {
    data: Array<OrderPublic>;
    count: number;
};

export type OrderState = 'PENDING' | 'INTEGRATED' | 'ERROR';

export type OrderUpdate = {
    base_document?: ((Blob | File) | null);
    base_document_name?: (string | null);
    content_processed?: (string | null);
    state?: OrderState;
    approved_at?: (string | null);
    erp_interaction_at?: (string | null);
    created_at?: string;
};

export type OutlookTokenStep2 = {
    code: string;
};

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UpdatePassword = {
    current_password: string;
    new_password: string;
};

export type UserCreate = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    is_auto_approved?: boolean;
    created_at?: string;
    password: string;
};

export type UserPublic = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    is_auto_approved?: boolean;
    created_at?: string;
    id: string;
};

export type UsersPublic = {
    data: Array<UserPublic>;
    count: number;
};

export type UserUpdate = {
    email?: (string | null);
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    is_auto_approved?: boolean;
    created_at?: string;
    password?: (string | null);
};

export type UserUpdateMe = {
    full_name?: (string | null);
    email?: (string | null);
    is_auto_approved?: boolean;
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type ClientsCreateClientData = {
    requestBody: ClientCreate;
};

export type ClientsCreateClientResponse = (ClientPublic);

export type EmailsReadEmailsData = {
    limit?: number;
    skip?: number;
};

export type EmailsReadEmailsResponse = (EmailsPublic);

export type EmailsCreateEmailData = {
    requestBody: EmailCreate;
};

export type EmailsCreateEmailResponse = (EmailPublic);

export type EmailsCreateOutlookTokenStep1Data = {
    requestBody: EmailCreate;
};

export type EmailsCreateOutlookTokenStep1Response = (string);

export type EmailsCreateOutlookTokenStep2Data = {
    requestBody: Body_emails_create_outlook_token_step_2;
};

export type EmailsCreateOutlookTokenStep2Response = ({
    [key: string]: (string);
});

export type LoginLoginAccessTokenData = {
    formData: Body_login_login_access_token;
};

export type LoginLoginAccessTokenResponse = (Token);

export type OrdersReadOrdersData = {
    limit?: number;
    skip?: number;
};

export type OrdersReadOrdersResponse = (OrdersPublic);

export type OrdersCreateOrderData = {
    formData: Body_orders_create_order;
};

export type OrdersCreateOrderResponse = (OrderPublic);

export type OrdersReadOrderData = {
    id: string;
};

export type OrdersReadOrderResponse = (OrderPublic);

export type OrdersDeleteOrderData = {
    id: string;
};

export type OrdersDeleteOrderResponse = (Message);

export type OrdersApproveOrderData = {
    id: string;
    requestBody: OrderUpdate;
};

export type OrdersApproveOrderResponse = (OrderPublic);

export type UsersReadUserMeResponse = (UserPublic);

export type UsersUpdateUserMeData = {
    requestBody: UserUpdateMe;
};

export type UsersUpdateUserMeResponse = (UserPublic);

export type UsersUpdatePasswordMeData = {
    requestBody: UpdatePassword;
};

export type UsersUpdatePasswordMeResponse = (Message);

export type UsersCreateUserData = {
    requestBody: UserCreate;
};

export type UsersCreateUserResponse = (UserPublic);

export type UsersReadUsersData = {
    limit?: number;
    skip?: number;
};

export type UsersReadUsersResponse = (UsersPublic);

export type UsersReadUserData = {
    id: string;
};

export type UsersReadUserResponse = (UserPublic);

export type UsersUpdateUserData = {
    id: string;
    requestBody: UserUpdate;
};

export type UsersUpdateUserResponse = (UserPublic);

export type UsersDeleteUserData = {
    id: string;
};

export type UsersDeleteUserResponse = (Message);

export type UtilsHealthCheckResponse = (boolean);