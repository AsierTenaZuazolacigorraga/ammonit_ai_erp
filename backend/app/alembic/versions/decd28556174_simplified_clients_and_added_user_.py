"""Simplified clients, and added user prompts

Revision ID: decd28556174
Revises: 36c9b62b69bc
Create Date: 2025-06-15 15:11:23.208813

"""

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "decd28556174"
down_revision = "36c9b62b69bc"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # First delete orders that don't have an owner_id
    op.execute('DELETE FROM "order" WHERE owner_id IS NULL')

    # Drop the foreign key constraint first
    op.drop_constraint("order_owner_id_fkey", "order", type_="foreignkey")

    # Update order owner_ids to point to the corresponding user IDs
    op.execute(
        """
        UPDATE "order" o
        SET owner_id = c.owner_id
        FROM client c
        WHERE o.owner_id = c.id
    """
    )

    # Now we can safely drop the client table and its index
    op.drop_index("ix_client_created_at", table_name="client")
    op.drop_table("client")

    # Add new column and modify existing ones
    op.add_column("order", sa.Column("content_structured", sa.JSON(), nullable=True))
    op.alter_column("order", "owner_id", existing_type=sa.UUID(), nullable=False)

    # Create new foreign key to user table
    op.create_foreign_key(
        "order_owner_id_user_fkey",
        "order",
        "user",
        ["owner_id"],
        ["id"],
        ondelete="CASCADE",
    )

    # Add new user columns
    op.add_column(
        "user",
        sa.Column(
            "orders_additional_rules", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
    )
    op.add_column(
        "user",
        sa.Column(
            "orders_particular_rules", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("user", "orders_particular_rules")
    op.drop_column("user", "orders_additional_rules")
    op.drop_constraint("order_owner_id_user_fkey", "order", type_="foreignkey")
    op.create_foreign_key(
        "order_owner_id_fkey",
        "order",
        "client",
        ["owner_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.alter_column("order", "owner_id", existing_type=sa.UUID(), nullable=True)
    op.drop_column("order", "content_structured")
    op.create_table(
        "client",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("owner_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("clasifier", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "content_processed", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "base_document", postgresql.BYTEA(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "base_document_name",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "base_document_markdown", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "structure",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("additional_info", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "structure_descriptions",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["user.id"], name="client_owner_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name="client_pkey"),
    )
    op.create_index("ix_client_created_at", "client", ["created_at"], unique=False)
    # ### end Alembic commands ###
