"""Recreated state enums

Revision ID: e2de961dd6d5
Revises: b8468214c5f3
Create Date: 2025-05-15 20:13:21.585613

"""

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e2de961dd6d5"
down_revision = "b8468214c5f3"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    order_state_enum = postgresql.ENUM(
        "PENDING",
        "APPROVED",
        "INTEGRATED_OK",
        "INTEGRATED_ERROR",
        name="order_state_enum",
    )
    order_state_enum.create(op.get_bind(), checkfirst=True)
    op.add_column(
        "order",
        sa.Column("state", order_state_enum, nullable=False, server_default="PENDING"),
    )
    op.alter_column("order", "state", server_default=None)

    # Add EmailDataState enum for emaildata table
    email_state_enum = postgresql.ENUM(
        "PROCESSED_OK",
        "PROCESSED_ERROR",
        name="email_state_enum",
    )
    email_state_enum.create(op.get_bind(), checkfirst=True)
    # Removed duplicate op.add_column for 'emaildata.state' as it already exists
    # op.add_column(
    #     "emaildata",
    #     sa.Column(
    #         "state", email_state_enum, nullable=False, server_default="PROCESSED_OK"
    #     ),
    # )
    # op.alter_column("emaildata", "state", server_default=None)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("order", "state")
    order_state_enum = postgresql.ENUM(
        "PENDING",
        "APPROVED",
        "INTEGRATED_OK",
        "INTEGRATED_ERROR",
        name="order_state_enum",
    )
    order_state_enum.drop(op.get_bind(), checkfirst=True)

    # Drop EmailDataState enum and column
    # op.drop_column("emaildata", "state")
    email_state_enum = postgresql.ENUM(
        "PROCESSED_OK",
        "PROCESSED_ERROR",
        name="email_state_enum",
    )
    email_state_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
